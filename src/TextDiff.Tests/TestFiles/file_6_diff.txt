--- a/Payment.cs
+++ b/Payment.cs
@@ -1,9 +1,10 @@
 using System;
 using System.Collections.Generic;
+ using System.Linq;

 namespace PaymentProcessing
 {
     public class Payment
     {
         public void ProcessPayment(decimal amount)
         {
+             if(amount <= 0)
+             {
+                 throw new ArgumentException("Amount must be greater than zero.");
+             }
             Console.WriteLine($"Processing payment of {amount}");
+             LogPayment(amount);
         }

@@ -13,7 +14,10 @@
         public bool ValidatePayment(decimal amount)
         {
+             if(amount <= 0)
+             {
+                 return false;
+             }
             return amount > 0;
         }

@@ -21,7 +25,8 @@
         public void LogPayment(decimal amount)
         {
-             Console.WriteLine($"Payment of {amount} has been logged.");
+             Console.WriteLine($"Payment of {amount} has been successfully logged.");
         }

         public decimal CalculateTax(decimal amount)
         {
+             var taxRate = GetTaxRate();
             return amount * 0.15m;
+         }

+        private decimal GetTaxRate()
+        {
+            return 0.15m;
         }

         public void RefundPayment(decimal amount)
         {
+             if(amount <= 0)
+             {
+                 throw new ArgumentException("Refund amount must be greater than zero.");
+             }
             Console.WriteLine($"Refunding payment of {amount}");
         }

+        public void GenerateReceipt(decimal amount)
+        {
+            Console.WriteLine($"Receipt generated for payment of {amount}");
+        }
     }
 }
